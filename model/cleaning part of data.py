# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fWY0fkLmA1VqbKx6d_xYMfEvUxKjQbKT

# 1.Load data and Import Libraries
"""

# Importing libraries

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Load Firepoints Data

goa_fire = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/FSI-Firepoints-100625 Goa.csv", encoding='latin1')
kerala_fire = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/FSI-Firepoints-100625 kerala.csv", encoding='latin1')
mh_fire = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/FSI-Firepoints-100625 MH.csv", encoding='latin1')

# Load weather data

goa_weather = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/GOA_AWS_IMD_data.csv")
kerala_weather = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/KERALA_AWS_IMD_data.csv")
mh_weather = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/MAHARASHTRA_AWS_IMD_data.csv")

# Load AWS location

aws_locations = pd.read_csv("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/All AWS Location.csv")

# Preview the firepoints data
print("---------------Firepoints data:-----------------")
print(goa_fire.head())


# Previw the weather data
print("----------------Weather data:---------------------")
print(goa_weather.head())

# Preview the aws locations
print("------------------AWS locations:------------------")
print(aws_locations.head())

import geopandas as gpd

# Load the shape file
protect_area = gpd.read_file("/content/drive/MyDrive/BITS_PILANI_RESEARCH/Data/Data/shp/Protect_area.shp")

# Prview spatial data
print(protect_area.head())
protect_area.plot()

"""# 2. Data Cleaning and Preprocessing

2.1 Handling missing values in firespoints data
"""

# Checking missing values in firepoints

print("Missing values in Goa Firepoints:\n", goa_fire.isnull().sum())
print("Missing values in Kerala Firepoints:\n", kerala_fire.isnull().sum())
print("Missing values in MH Firepoints:\n", mh_fire.isnull().sum())

# Drop the unnamed:14 which is a junk column in every firepoints

goa_fire.drop(columns=['Unnamed: 14'], inplace=True)
kerala_fire.drop(columns=['Unnamed: 14'], inplace=True)
mh_fire.drop(columns=['Unnamed: 14'], inplace=True)

# Drop Forest Block, Compartment number columns

goa_fire.drop(columns=['Forest Block', 'Compartment No'], inplace=True)
kerala_fire.drop(columns=['Forest Block', 'Compartment No'], inplace=True)
mh_fire.drop(columns=['Forest Block', 'Compartment No'], inplace=True)

# Drop Block/Section/Round and Beat column in Kerla
kerala_fire.drop(columns=['Block/Section/Round', 'Beat'], inplace=True)

# Drop nan rows of Range, Beat, Block/Section/Round column in MH
mh_fire.dropna(subset=['Range', 'Beat', 'Block/Section/Round'], inplace=True)

"""2.2 Handling misssing values in Weather and AWS data"""

# Checking Missing values in weather data

print("Missing values in Goa Firepoints:\n", goa_weather.isnull().sum(),"\n")
print("Missing values in Kerala Firepoints:\n", kerala_weather.isnull().sum(),"\n")
print("Missing values in MH Firepoints:\n", mh_weather.isnull().sum(),"\n")

# Checking missing values in aws data
print("Missing values in AWS Locations:\n", aws_locations.isnull().sum(),"\n")

# List of columns to drop
drop_cols = [
    "TEMP DAY MIN. ('C)", "TEMP DAY MAX. ('C)", "RH DAY MIN MAX (%)",
    "WIND DIR 3 m (Deg)", "WIND SPEED 3 m (Kt)", "WIND SPEED MAX / GUST 3 m (Kt)",
    "SLP (hPa)", "MSLP (hPa / gpm)", "SUN SHINE (HH.MM)",
    "SOIL TEMP 10 cm ('C)", "SOIL MOIS 10 cm (m3 / m3)",
    "SOIL TEMP 30 cm ('C)", "SOIL MOIS 30 cm (m3 / m3)",
    "SOIL TEMP 70 cm ('C)", "SOIL MOIS 70 cm (m3 / m3)",
    "SOIL TEMP 100 cm ('C)", "SOIL MOIS 100 cm (m3 / m3)",
    "GLOBAL RAD IATION (v / m2)", "PAR (micro - mole / m2s)",
    "BATTERY (Volts)", "GPS"
]

# Drop from each weather dataframe
goa_weather = goa_weather.drop(columns=drop_cols, errors='ignore')
kerala_weather = kerala_weather.drop(columns=drop_cols, errors='ignore')
mh_weather = mh_weather.drop(columns=drop_cols, errors='ignore')

# Fill moderate missing values with mean (or use interpolation for time series if preferred)
for col in ["RAIN FALL CUM. SINCE 0300 UTC (mm)", "TEMP. ('C)", "RH (%)", "WIND DIR 10 m (Deg)", "WIND SPEED 10 m (Kt)"]:
    goa_weather[col] = goa_weather[col].fillna(goa_weather[col].mean())
    kerala_weather[col] = kerala_weather[col].fillna(kerala_weather[col].mean())
    mh_weather[col] = mh_weather[col].fillna(mh_weather[col].mean())

# Impute ALTITUDE with mean if needed, or drop rows if ALTITUDE is critical
aws_locations['ALTITUDE'] = aws_locations['ALTITUDE'].fillna(aws_locations['ALTITUDE'].mean())

# Checking Missing values in weather data

print("Missing values in Goa Firepoints:\n", goa_weather.isnull().sum(),"\n")
print("Missing values in Kerala Firepoints:\n", kerala_weather.isnull().sum(),"\n")
print("Missing values in MH Firepoints:\n", mh_weather.isnull().sum(),"\n")

# Checking missing values in aws data
print("Missing values in AWS Locations:\n", aws_locations.isnull().sum(),"\n")

